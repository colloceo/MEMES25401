{"ast":null,"code":"var _jsxFileName = \"C:\\\\MEMES254KE\\\\MEMES25401\\\\src\\\\components\\\\MemeGenerator.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MemeGenerator = () => {\n  _s();\n  const [memeList, setMemeList] = useState([]);\n  const [randomMeme, setRandomMeme] = useState(null);\n  const [topText, setTopText] = useState(\"\");\n  const [bottomText, setBottomText] = useState(\"\");\n  useEffect(() => {\n    // Fetch memes from the API\n    fetch(\"https://api.imgflip.com/get_memes\").then(response => response.json()).then(data => setMemeList(data.data.memes));\n  }, []);\n  const getRandomMeme = () => {\n    const randomIndex = Math.floor(Math.random() * memeList.length);\n    setRandomMeme(memeList[randomIndex]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"meme-generator\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Meme Generator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Create your own hilarious memes with ease!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"meme-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Top Text\",\n        value: topText,\n        onChange: e => setTopText(e.target.value),\n        className: \"text-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Bottom Text\",\n        value: bottomText,\n        onChange: e => setBottomText(e.target.value),\n        className: \"text-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: getRandomMeme,\n        className: \"generate-button\",\n        children: \"Get Random Meme\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), randomMeme && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"meme-display\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"meme-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: randomMeme.url,\n          alt: \"Generated Meme\",\n          className: \"meme-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"meme-text top\",\n          children: topText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"meme-text bottom\",\n          children: bottomText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      jsx: true,\n      children: `\n        .meme-generator {\n          font-family: 'Roboto', sans-serif;\n          text-align: center;\n          background-color: #f8f9fa;\n          padding: 30px;\n          border-radius: 10px;\n          box-shadow: 0 0 20px rgba(0, 0, 0, 0.1);\n          margin: 20px;\n        }\n        .header {\n          margin-bottom: 20px;\n        }\n        .header h1 {\n          font-size: 2.5rem;\n          color: #333;\n          margin-bottom: 5px;\n        }\n        .header p {\n          color: #666;\n          font-size: 1rem;\n        }\n        .meme-form {\n          margin: 20px 0;\n        }\n        .text-input {\n          width: 80%;\n          max-width: 400px;\n          padding: 10px;\n          margin: 10px 0;\n          border: 1px solid #ccc;\n          border-radius: 5px;\n        }\n        .generate-button {\n          background-color: #ff6347;\n          color: #fff;\n          padding: 10px 20px;\n          border: none;\n          border-radius: 5px;\n          font-size: 1rem;\n          cursor: pointer;\n          transition: background-color 0.3s;\n        }\n        .generate-button:hover {\n          background-color: #e5533d;\n        }\n        .meme-display {\n          margin-top: 20px;\n        }\n        .meme-wrapper {\n          position: relative;\n          display: inline-block;\n        }\n        .meme-image {\n          width: 100%;\n          max-width: 500px;\n          border-radius: 10px;\n          box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);\n        }\n        .meme-text {\n          position: absolute;\n          left: 50%;\n          transform: translateX(-50%);\n          width: 90%;\n          text-align: center;\n          font-family: 'Impact', 'Arial Black', sans-serif;\n          color: white;\n          text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.5);\n          font-size: 2rem;\n        }\n        .meme-text.top {\n          top: 10px;\n        }\n        .meme-text.bottom {\n          bottom: 10px;\n        }\n      `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(MemeGenerator, \"1oPE0y3sq2IzZq92+dpXi3jAfcw=\");\n_c = MemeGenerator;\nexport default MemeGenerator;\nvar _c;\n$RefreshReg$(_c, \"MemeGenerator\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","MemeGenerator","_s","memeList","setMemeList","randomMeme","setRandomMeme","topText","setTopText","bottomText","setBottomText","fetch","then","response","json","data","memes","getRandomMeme","randomIndex","Math","floor","random","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","src","url","alt","jsx","_c","$RefreshReg$"],"sources":["C:/MEMES254KE/MEMES25401/src/components/MemeGenerator.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst MemeGenerator = () => {\r\n  const [memeList, setMemeList] = useState([]);\r\n  const [randomMeme, setRandomMeme] = useState(null);\r\n  const [topText, setTopText] = useState(\"\");\r\n  const [bottomText, setBottomText] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    // Fetch memes from the API\r\n    fetch(\"https://api.imgflip.com/get_memes\")\r\n      .then(response => response.json())\r\n      .then(data => setMemeList(data.data.memes));\r\n  }, []);\r\n\r\n  const getRandomMeme = () => {\r\n    const randomIndex = Math.floor(Math.random() * memeList.length);\r\n    setRandomMeme(memeList[randomIndex]);\r\n  };\r\n\r\n  return (\r\n    <div className=\"meme-generator\">\r\n      {/* Header */}\r\n      <header className=\"header\">\r\n        <h1>Meme Generator</h1>\r\n        <p>Create your own hilarious memes with ease!</p>\r\n      </header>\r\n\r\n      {/* Meme Form */}\r\n      <div className=\"meme-form\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Top Text\"\r\n          value={topText}\r\n          onChange={(e) => setTopText(e.target.value)}\r\n          className=\"text-input\"\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Bottom Text\"\r\n          value={bottomText}\r\n          onChange={(e) => setBottomText(e.target.value)}\r\n          className=\"text-input\"\r\n        />\r\n        <button onClick={getRandomMeme} className=\"generate-button\">\r\n          Get Random Meme\r\n        </button>\r\n      </div>\r\n\r\n      {/* Display Meme */}\r\n      {randomMeme && (\r\n        <div className=\"meme-display\">\r\n          <div className=\"meme-wrapper\">\r\n            <img src={randomMeme.url} alt=\"Generated Meme\" className=\"meme-image\" />\r\n            <h2 className=\"meme-text top\">{topText}</h2>\r\n            <h2 className=\"meme-text bottom\">{bottomText}</h2>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Inline CSS */}\r\n      <style jsx>{`\r\n        .meme-generator {\r\n          font-family: 'Roboto', sans-serif;\r\n          text-align: center;\r\n          background-color: #f8f9fa;\r\n          padding: 30px;\r\n          border-radius: 10px;\r\n          box-shadow: 0 0 20px rgba(0, 0, 0, 0.1);\r\n          margin: 20px;\r\n        }\r\n        .header {\r\n          margin-bottom: 20px;\r\n        }\r\n        .header h1 {\r\n          font-size: 2.5rem;\r\n          color: #333;\r\n          margin-bottom: 5px;\r\n        }\r\n        .header p {\r\n          color: #666;\r\n          font-size: 1rem;\r\n        }\r\n        .meme-form {\r\n          margin: 20px 0;\r\n        }\r\n        .text-input {\r\n          width: 80%;\r\n          max-width: 400px;\r\n          padding: 10px;\r\n          margin: 10px 0;\r\n          border: 1px solid #ccc;\r\n          border-radius: 5px;\r\n        }\r\n        .generate-button {\r\n          background-color: #ff6347;\r\n          color: #fff;\r\n          padding: 10px 20px;\r\n          border: none;\r\n          border-radius: 5px;\r\n          font-size: 1rem;\r\n          cursor: pointer;\r\n          transition: background-color 0.3s;\r\n        }\r\n        .generate-button:hover {\r\n          background-color: #e5533d;\r\n        }\r\n        .meme-display {\r\n          margin-top: 20px;\r\n        }\r\n        .meme-wrapper {\r\n          position: relative;\r\n          display: inline-block;\r\n        }\r\n        .meme-image {\r\n          width: 100%;\r\n          max-width: 500px;\r\n          border-radius: 10px;\r\n          box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);\r\n        }\r\n        .meme-text {\r\n          position: absolute;\r\n          left: 50%;\r\n          transform: translateX(-50%);\r\n          width: 90%;\r\n          text-align: center;\r\n          font-family: 'Impact', 'Arial Black', sans-serif;\r\n          color: white;\r\n          text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.5);\r\n          font-size: 2rem;\r\n        }\r\n        .meme-text.top {\r\n          top: 10px;\r\n        }\r\n        .meme-text.bottom {\r\n          bottom: 10px;\r\n        }\r\n      `}</style>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MemeGenerator;\r\n"],"mappings":"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A;MAAA,OAC/C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN,eAGD5B,OAAA;MAAOuC,GAAG;MAAAf,QAAA,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEV,CAAC;AAAC1B,EAAA,CA1IID,aAAa;AAAAuC,EAAA,GAAbvC,aAAa;AA4InB,eAAeA,aAAa;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}